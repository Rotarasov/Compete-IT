{
  "openapi": "3.0.0",
  "info": {
    "title": "compete it",
    "version": "1.0",
    "description": ""
  },
  "servers": [
    {
      "url": "https://rotarasov.pythonanywhere.com"
    }
  ],
  "paths": {
    "/users/login/": {
      "parameters": [],
      "post": {
        "summary": "",
        "operationId": "post-users-login",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                },
                "examples": {}
              }
            }
          }
        },
        "description": "User authorization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": ""
        }
      }
    },
    "/users/register/": {
      "post": {
        "summary": "",
        "operationId": "post-users-register",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Register new users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "confirm_password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/google-login/": {
      "post": {
        "summary": "",
        "operationId": "post-users-google-login",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Login with google auth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Always \"google-oauth2\""
                  },
                  "code": {
                    "type": "string",
                    "description": "Authorization code. Check OAuth2 docs"
                  }
                }
              },
              "examples": {}
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "",
        "operationId": "get-users-user_id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Retrieve user",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization: Token <insert_your_token>",
            "required": true
          }
        ]
      },
      "put": {
        "summary": "",
        "operationId": "put-users-user_id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Update user",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization: Token <insert_your_token>",
            "required": true,
            "description": ""
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Fields to update in user. Not all required"
        }
      },
      "delete": {
        "summary": "",
        "operationId": "delete-users-user_id",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete user",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization: Token <insert_your_token>",
            "required": true
          }
        ]
      }
    },
    "/users/logout/": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "get-users-logout",
        "description": "Logout from system",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization: Token <insert_your_token>"
          }
        ]
      }
    },
    "/events/": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "start_date": {
                        "type": "string",
                        "description": "Date type"
                      },
                      "type": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-events",
        "description": "Get list of events"
      },
      "parameters": []
    },
    "/events/{pk}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "pk",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "",
        "operationId": "get-events-pk",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Retrieve event",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization: Token <insert_your_token>"
          }
        ]
      },
      "put": {
        "summary": "",
        "operationId": "put-events-pk",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Update event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "start_date": {
                    "type": "string"
                  },
                  "end_date": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Fields to update. Optional"
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization: Token <insert_your_token>"
          }
        ]
      },
      "delete": {
        "summary": "",
        "operationId": "delete-events-pk",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Delete event",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization: Token <insert_your_token>"
          }
        ]
      }
    },
    "/events/survey": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-events-survey",
        "description": "Get survey questions"
      }
    },
    "/events/{event_pk}/survey": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "event_pk",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "",
        "operationId": "post-events-event_pk-survey",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "passed_survey": {
                      "type": "boolean",
                      "description": "If user passed all surveys"
                    },
                    "participation": {
                      "type": "integer"
                    },
                    "question": {
                      "type": "integer"
                    },
                    "answer": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Save user answer to survey question",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization: Token <insert_your_token>"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participation": {
                    "type": "integer"
                  },
                  "question": {
                    "type": "integer"
                  },
                  "answer": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {}
  }
}